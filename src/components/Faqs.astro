---
import { useTranslations } from "@/i18n/utils";
import { languages } from "@/i18n/ui";

const relativeLocale = Astro.currentLocale || "en";
const t = useTranslations(relativeLocale as keyof typeof languages);

const allQuestions = [
  {
    question: t("faq.seller.question1"),
    answer: t("faq.seller.answer1"),
    type: "seller",
  },
  {
    question: t("faq.seller.question2"),
    answer: t("faq.seller.answer2"),
    type: "seller",
  },
  {
    question: t("faq.seller.question3"),
    answer: t("faq.seller.answer3"),
    type: "seller",
  },
  {
    question: t("faq.seller.question4"),
    answer: t("faq.seller.answer4"),
    type: "seller",
  },
  {
    question: t("faq.seller.question5"),
    answer: t("faq.seller.answer5"),
    type: "seller",
  },

  {
    question: t("faq.buyer.question1"),
    answer: t("faq.buyer.answer1"),
    type: "buyer",
  },
  {
    question: t("faq.buyer.question2"),
    answer: t("faq.buyer.answer2"),
    type: "buyer",
  },
  {
    question: t("faq.buyer.question3"),
    answer: t("faq.buyer.answer3"),
    type: "buyer",
  },
  {
    question: t("faq.buyer.question4"),
    answer: t("faq.buyer.answer4"),
    type: "buyer",
  },
  {
    question: t("faq.buyer.question5"),
    answer: t("faq.buyer.answer5"),
    type: "buyer",
  },

  {
    question: t("faq.investor.question1"),
    answer: t("faq.investor.answer1"),
    type: "investor",
  },
  {
    question: t("faq.investor.question2"),
    answer: t("faq.investor.answer2"),
    type: "investor",
  },
  {
    question: t("faq.investor.question3"),
    answer: t("faq.investor.answer3"),
    type: "investor",
  },

  {
    question: t("faq.rent.question1"),
    answer: t("faq.rent.answer1"),
    type: "rent",
  },
  {
    question: t("faq.rent.question2"),
    answer: t("faq.rent.answer2"),
    type: "rent",
  },
  {
    question: t("faq.rent.question3"),
    answer: t("faq.rent.answer3"),
    type: "rent",
  },
  {
    question: t("faq.rent.question4"),
    answer: t("faq.rent.answer4"),
    type: "rent",
  },
  {
    question: t("faq.rent.question5"),
    answer: t("faq.rent.answer5"),
    type: "rent",
  },
  {
    question: t("faq.rent.question6"),
    answer: t("faq.rent.answer6"),
    type: "rent",
  },
];

const { type, className, id } = Astro.props;
const questions = allQuestions.filter((val) => val.type == type);
---

<section id={id} class={`bg-crema py-16 px-20 ${className}`}>
  <div class="max-w-2xl mx-auto flex flex-col justify-center items-center">
    <h2 class="font-serif text-4xl mb-5 md:mb-10">{t("faq.title")}</h2>
    {
      type == "buyer" ? (
        <p class="text-center text-lg mb-5 md:mb-10">
          {t("faq.buyer.description")}
        </p>
      ) : type == "seller" ? (
        <p class="text-center text-lg mb-5 md:mb-10">
          {t("faq.seller.description")}
        </p>
      ) : type == "investor" ? (
        <p class="text-center text-lg mb-5 md:mb-10">
          {t("faq.investor.description")}
        </p>
      ) : (
        <p class="text-center text-lg mb-5 md:mb-10">
          {t("faq.rent.description")}
        </p>
      )
    }

    {
      questions.map(({ question, answer }) => {
        return (
          <details class="flex flex-col justify-center items-center gap-2 cursor-pointer group/faq w-full  border-b border-black">
            <summary class="flex justify-start items-center gap-8 py-4 relative w-full">
              <h3 class="text-base text-pretty text-black capitalize">
                {question}
              </h3>
              <div class="absolute top-auto bottom-auto left-auto right-8">
                <button
                  data-open="false"
                  class="butOpenClose w-6 h-6 flex justify-center items-center
                before:content-[''] before:content-center before:bg-black/70 before:w-6 before:h-0.5
                after:content-[''] after:content-center after:bg-black/70 after:w-0.5 after:h-6 after:-translate-x-3 after:transition-transform after:duration-500"
                />
              </div>
            </summary>
            <div class="mb-4 w-full">
              <p class="text-left text-black ">{answer}</p>
            </div>
          </details>
        );
      })
    }
  </div>
</section>

<style>
  details[open] summary button::after {
    transform: rotate(90deg);
    transform-origin: center;
  }
</style>
