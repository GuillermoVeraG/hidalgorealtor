---
//import NumberInput from "@/components/NumberInput.tsx";
//import MultiRangeInput from "@/components/MultiRangeInput";
import SearchForm from "@/components/SearchForm";
import type { LabelsSearchParams } from "@/utils/property";
import { useTranslations } from "@/i18n/utils";
import { languages } from "@/i18n/ui";

const relativeLocale = Astro.currentLocale || "en";
const t = useTranslations(relativeLocale as keyof typeof languages);

const labels = {
  address: t("buyer.search.sale.address"),
  subtype: t("buyer.search.sale.type"),
  bedsbaths: t("buyer.search.sale.bedsbaths"),
  beds: t("buyer.search.sale.beds"),
  baths: t("buyer.search.sale.baths"),
  amenities: t("buyer.search.sale.amenities"),
  view: t("buyer.search.sale.view"),
  parking: t("buyer.search.sale.parking"),
  pool: t("buyer.search.sale.pool"),
  pricetitle: t("buyer.search.sale.price.title"),
  pricedesc: t("buyer.search.sale.price.desc"),
  sqfttitle: t("buyer.search.sale.sqft.title"),
  sqftdesc: t("buyer.search.sale.sqft.desc"),
  butsubmit: t("buyer.search.sale.but"),
  butclear: "Clear filters",
} as LabelsSearchParams;

const { isFilter, data } = Astro.props;
---

<SearchForm labels={labels} isFilter={isFilter} data={data} client:load />
